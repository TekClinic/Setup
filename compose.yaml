version: '3.8'
services:
  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    networks:
      - back-tier
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U root" ]
      interval: 5s
      retries: 20

  keycloak:
    image: keycloak/keycloak:23.0
    command: start-dev
    networks:
      front-tier: {}
      back-tier:
        aliases:
          - auth.tekclinic.org
    environment:
      - KC_DB=postgres
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_URL_HOST=db
      - KC_DB_URL_PORT=5432
      - KC_DB_USER=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME=auth.tekclinic.org
      - KC_HOSTNAME_PORT=80
      - KC_HTTP_PORT=80
    depends_on:
      db:
        condition: service_healthy

  web-app:
    build: 
      context: web-app
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
        NEXT_PUBLIC_AUTH_URL: ${NEXT_PUBLIC_AUTH_URL}
        NEXT_PUBLIC_SYNCFUSION_LICENSE_KEY: ${NEXT_PUBLIC_SYNCFUSION_LICENSE_KEY}
    networks:
      - front-tier

  patients:
    build: 
      context: patients
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        GITHUB_ACTOR: ${GITHUB_ACTOR}
    networks:
      - back-tier
    ports:
      - "9090:9090"
    environment:
      - AUTH_ISSUER=http://auth.tekclinic.org:80/realms/tekclinic
      - DB_ADDR=db:5432
      - DB_USER=patients
      - DB_PASSWORD=patients
      - DB_DATABASE=patients
      - BUN_DEBUG=2
    depends_on:
      keycloak:
        condition: service_started
      db:
        condition: service_healthy
    restart: on-failure

  appointments:
    build: 
      context: appointments
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        GITHUB_ACTOR: ${GITHUB_ACTOR}
    networks:
      - back-tier
    ports:
      - "9091:9090"
    environment:
      - AUTH_ISSUER=http://auth.tekclinic.org:80/realms/tekclinic
      - DB_ADDR=db:5432
      - DB_USER=appointments
      - DB_PASSWORD=appointments
      - DB_DATABASE=appointments
      - BUN_DEBUG=2
    depends_on:
      keycloak:
        condition: service_started
      db:
        condition: service_healthy
    restart: on-failure

  doctors:
    build: 
      context: doctors
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        GITHUB_ACTOR: ${GITHUB_ACTOR}
    networks:
      - back-tier
    ports:
      - "9092:9090"
    environment:
      - AUTH_ISSUER=http://auth.tekclinic.org:80/realms/tekclinic
      - DB_ADDR=db:5432
      - DB_USER=doctors
      - DB_PASSWORD=doctors
      - DB_DATABASE=doctors
      - BUN_DEBUG=2
    depends_on:
      keycloak:
        condition: service_started
      db:
        condition: service_healthy
    restart: on-failure

  api-gateway:
    build: 
      context: api-gateway
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
        GITHUB_ACTOR: ${GITHUB_ACTOR}
    networks:
      - front-tier
      - back-tier
    environment:
      - MS_PATIENT_HOST=patients
      - MS_APPOINTMENT_HOST=appointments
      - MS_DOCTOR_HOST=doctors
      - URI_SCHEME=http
      - URI_HOST=api.tekclinic.org

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    networks:
      - front-tier
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web-app
      - api-gateway
      - keycloak

networks:
  front-tier: {}
  back-tier: {}
