version: '3.8'
services:
    keycloak:
        image: keycloak/keycloak:23.0
        command: start-dev
        networks:
            - front-tier
            - back-tier
        environment:
            - KC_DB=postgres
            - KC_DB_URL_DATABASE=keycloak
            - KC_DB_URL_HOST=db
            - KC_DB_URL_PORT=5432
            - KC_DB_USER=keycloak
            - KC_DB_PASSWORD=keycloak
            - KC_HOSTNAME=auth.tekclinic.org
            - KC_HOSTNAME_PORT=80
        volumes:
            - ./keycloak:/opt/keycloak/data/import
        depends_on:
            db:
                condition: service_healthy
    web-app:
        build: web-app
        networks:
            - front-tier
    auth:
        build: auth
        networks:
            - back-tier
        environment:
            - KC_CLIENT_ID=backend-client
            - KC_CLIENT_SECRET=bwMzihSCl9KMb9vykf4SPMNMmzX97Kpa
            - KC_REALM=tekclinic
            - KC_URL=http://keycloak:8080
        ports:
            - "9090:9090"
    api-gateway:
        build: api-gateway
        networks:
            - front-tier
            - back-tier
        environment:
            - MS_AUTH_HOST=auth
            - MS_AUTH_PORT=9090
    db:
        image: postgres:latest
        ports:
            - "5432:5432"
        networks:
            - back-tier
        environment:
            - POSTGRES_USER=root
            - POSTGRES_PASSWORD=root
        volumes:
            - ./postgresql:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready" ]
            interval: 1s
            retries: 20
    nginx:
        image: nginx:latest
        ports:
            - "80:80"
        networks:
            - front-tier
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
        depends_on:
            - web-app
            - api-gateway
            - keycloak
networks:
    front-tier: {}
    back-tier: {}
